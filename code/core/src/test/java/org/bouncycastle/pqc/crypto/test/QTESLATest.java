package org.bouncycastle.pqc.crypto.test;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import junit.framework.Assert;
import junit.framework.TestCase;
import org.bouncycastle.crypto.AsymmetricCipherKeyPair;
import org.bouncycastle.crypto.params.ParametersWithRandom;
import org.bouncycastle.pqc.crypto.qtesla.QTESLAKeyGenerationParameters;
import org.bouncycastle.pqc.crypto.qtesla.QTESLAKeyPairGenerator;
import org.bouncycastle.pqc.crypto.qtesla.QTESLAPrivateKeyParameters;
import org.bouncycastle.pqc.crypto.qtesla.QTESLAPublicKeyParameters;
import org.bouncycastle.pqc.crypto.qtesla.QTESLASecurityCategory;
import org.bouncycastle.pqc.crypto.qtesla.QTESLASigner;
import org.bouncycastle.util.Arrays;
import org.bouncycastle.util.encoders.Hex;

public class QTESLATest
    extends TestCase
{
    static SecureRandom secureRandom = new SecureRandom();

    private static String asString(Map<String, String> values, String key)
    {
        if (values.containsKey(key))
        {
            return values.get(key);
        }
        return null;
    }

    private static Integer asInt(Map<String, String> values, String key, int def)
        throws Exception
    {
        String value = asString(values, key);
        if (value != null)
        {
            return Integer.parseInt(value);
        }
        return def;
    }

    private static byte[] asByteArray(Map<String, String> values, String key)
    {
        String value = asString(values, key);
        if (value != null)
        {
            return Hex.decode(value);
        }
        return null;
    }

//    private void doTestSig(AsymmetricCipherKeyPair kp)
//    {
//        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
//        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");
//
//        QTESLAPublicKeyParameters qPub = (QTESLAPublicKeyParameters)kp.getPublic();
//        QTESLAPrivateKeyParameters qPriv = (QTESLAPrivateKeyParameters)kp.getPrivate();
//
//        QTESLASigner signer = new QTESLASigner();
//
//        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));
//
//        byte[] sig = signer.generateSignature(msg);
//
//        signer.init(false, qPub);
//
//        assertTrue(signer.verifySignature(msg, sig));
//    }


    private void doTestKAT(String file, int securityCategory, byte[] pubKey, byte[] privKey, byte[] seed, byte[] msg, byte[] expected)
    {


        if (file.contains("KAT32"))
        {

            //
            // Validate Key Generation.
            //
            // Invoke the key generator with the Fixed Random that uses the seed from the vector.
            // This ensures we can generate the same keys as the vector.
            // USE A REAL RANDOM NUMBER GENERATOR IN PRODUCTION.
            //
            QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(securityCategory, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
            QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
            keyGen.init(keyGenerationParameters);
            AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
            //
            // Test generated keys from seed match supplied keys in vector.
            //
            Assert.assertTrue(Arrays.areEqual(pubKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
            Assert.assertTrue(Arrays.areEqual(privKey, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));
        }


        //
        // Set up for sign / verify testing.
        //
        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(securityCategory, pubKey);
        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(securityCategory, privKey);


        // For signing..
        QTESLASigner signer = new QTESLASigner();
        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));
        byte[] sig = signer.generateSignature(msg);


        //
        // Verify signature matches vector, NB signatures in the vector are [sig][msg] hence the concatenation.
        //
        assertTrue(Arrays.areEqual(expected, Arrays.concatenate(sig, msg)));


        //
        // Set up for verification.
        //
        signer = new QTESLASigner();
        signer.init(false, qPub);

        // Verify verification.
        assertTrue(signer.verifySignature(msg, sig));


        //
        // Damage signature, expect failure.
        //
        {
            byte[] damagedSig = Arrays.copyOf(sig, sig.length);
            damagedSig[0] ^= 1;
            assertFalse(signer.verifySignature(msg, damagedSig));
        }

        //
        // Damage Message, expect failure.
        //
        {
            byte[] damagedMsg = Arrays.copyOf(msg, msg.length);
            damagedMsg[0] ^= 1;
            assertFalse(signer.verifySignature(damagedMsg, sig));
        }
    }

    /**
     * Generate a signature and compare the generated result with one generated by the C api.
     *
     * @throws Exception
     */
    public void testSignQ1()
        throws Exception
    {

        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");
        byte[] sk = Hex.decode("0B30605000E08087F21F029427811CC07D2108F41338809E03FFF9EE175028DF223D7D0914F85F3090C07B83F5F9F12F883F3E028B06121008303F017EFFFB170A6CA86F40C287E71828B4973F613F01072934E857517FFF84F119E47F10C002418405250A48F050C0007D0123EC5F482F80018103004488C7CFDEFF7C0009F0CBD7A080C183F8D51F4CB86F223B89F1E9E52BB8B0BF7B78FD32FC8B0FF0BE007FFAD2F1DFF71FC17E06FE1318EC0870BE018502E52158C84E607E7910E31504A02F808100FD1AFEEFEF40FEC3FA0BFBFB2B40AEDF45040703F6D757D081C18307FE01041000007F09FE01F427384F023C7CFF0B005CD8A0FE800AF1159CD7DFBE217E820F09FE974850A1018400EE05147FAFA141FAFFF0C9ABAFB0FEC0FBFDFC05BC1F90A1807BFCE5CD6FF890FFFC01F015E0F3C7FF5FBD77FA0DD897370060BE83FCFBC56F1810608482F61674036810E2FB84FE0C1488BF2F1FC2FFFDF5FF4320AFA03F7A0AE931B00780A1C480FA211470C02FC283FF060A36740790208389F9F7CB1350BF1EFF00010F1CC8A09FBE817D0FFF2568181F60FD81FCE32918A09EBF7DFDFD04F237503FA084820800FEBFAF0F217EFC1DE5E9F7E71FE3820507EC23D0777F3F7DFFFE2F22E84FBF628284FA0B22C06FA15F40FEF12D487410A15F40FA09E5FD2B00BF1C80F80606EC0FE7E0DEFE7FFEF17390F86F41FD771B28067CA00F40BE0214060A50E08E018087F5E033F447AFA07BFA170C5AB047A13E410605FDE71BB800803D85F01FCA3B302F014107FDDE09709F705DBD00F7EA277808C060037CF2FED7CFFF90E1FD7CF511FE13C8C07F7F0A061828EC7F7FA03F84F807FC0B980E9E83FBF006F4271811DE3CFBEFF4EDCB6F5FDF417FF71A082C20906100FB041242B098603E8005E908F88F38EFA03E7B0028361C88917D817A15094800B07E5E3C030014FC93773F61C3790900ECDFD71F20FE81FBF4E92330C0A0C183FBFB15BCE76F1F0102F4D31B743FFFC17E04FD01BCD7E73EDE7B800909E84F780181817FF70A382C88201F3E7CF9082E2C000121C00118ED09782F00003E00EEE1F92768C0A0BFFEF7E90F8C68A1C0FEFD03F69F63E781FFC3000F24F0CF77BF80FBFBEEF9DD071890A00201FCF3D7533820E101FA030CFEEFB87F1E007E021EF6631841BF8181FE21EA07186F9D4386F9E415F82FD0808382041ABC876F10DFFEFA0CECFFE3A7BEE181F205EDE71F28B0FF00F9F21D264850BF3D837DE6FB2FC447AFA1BE0507EE15DCDF7F800378EDF7131C48D07F7D7CF921CC77E8CF7F827D0C106614686000BDF6FB04F86BCF1E3E800114F5E7BB6F10DEFF81F311E043878F003FFCF2131214A0A07E418AF42D08E8EF3FDE0000EFFF0FC8773F60BC860E1322D46F7001407C001CFA57EF0E61BD81FCD539B06791DD80FEFA09263410E07CBFFF08EA1DA0CFAF20F96DFB1F0284EF400141800DEFABCFCF3F7E420AF9DEAF3F08B08083F7091314C437C05F3D05040C0648C88F1F008B0E0CF82F28805F0191FBF3C317C820E04087081DF68FB7AF7DC27D02DBCD63A09F5FBF8DFA23566000107F7EFE0DEA0FA8EF30007F800AF7E707A83FA040FAE0993B08009265B8004398CF119F95FCC217D38228F1D1F14BCFC5B7160986C339F23EB15423271EF1CF476289657DBBB1460665D3944B78BEE92D15AA609768F9");

        byte[] publicKey = Hex.decode("FC218155B484DC0EC3C2A445E6E2092310C4146BEC2A3A5D3D0CE8070B75ABCE4DF594FEF99A1615ED658C487F4F9FE9870AA816BA2364EC9174A417697B3244F252E07A382DDF33E39444441E4C5AAD319274F3E37F75DE8C2476393CFF3CD0250688F0A1FB0106972E62170F0C2269B0AD579CA91F0F4343B44D23F73BD39B5470F8B2A0DC3610D42E3BBC1ED7AE03BF6A88E4A647128278EA5A747590FA9F3148BDB56A3606E2AF20FE7C178647F98CE7D0C90B12344D7D33A766D21C86E98A164405134D5163F5BDE28D5A106ABA070D80DC0025C584D20B5774F25231A89D0C9D7A8B182E34A356DE4B7ED302CF10729F021032D111E431E6114AE915241C269B9CF9C3C5E4F55CB73BB4EA89D35060046D904896101017E4BBEFEDB404D5EE0B0846F89567780061BE858F1FDD0E9849AB64E744DA1863F989D179F372AA78412E15A91A0C7480081851C0C1CF98F4F46551EE84961A1843A78C12152952037B8B962A7150C9400456A63A6304E934AE63ADCA82C3CB650446A65E4A3AB1DD6F4D9E5634053D0F0F79489E196D5E8704E26BF8F1E451C5840E822FEA12892110CEEC986889A01572062B6E35F43BBE44D34D165EB273FB54F5EE2F901345453561AAC63CC4D37C7E534DC2962D0AC6DE752DBC966535233190364CBCA2021902A90A8C2B4494BF2226F89F20D082413F25E5A8BA64E6613EA3852E8B0B6F288A4812E5F5A47A7B6C458F204A9F45E78908301FCF448025A724F77ACAF2C3F469E35CF0E24FD3232F3740114AEA6B9C1D33D34A90939145475FE21D5F19CC06F9AA8DD069EAE6530087307A7F0EE4FD2A7C9D0444DDB5347B04E0AA864102635B1DE32F4D15757D16D73076FAB3121ED57C792905E291B39FAB66BA84106ADCE205565829B129C9DCF0A5663003BC6749F91DF0225AACED2CBB72376B8911462A203D79C74E6E51FB3A50C1E536717A93978C35924BBD6BA51DE681E410BBAF52C57BFC280A45EA0EBB503A5455170C5AC4548EDEF81A8895D4CD30A74B737232ED5C8D90FC4CB0F783A3D6083430A1DAB2326C4CD7479F9B64D15372A9AF4482EDA0592703304E7ED222399D1A02045A928BA7E698B0B5B4B5AAC40D290180CE670B5905B72481DC58CE8A657930901A1233E5F032962097339D2384C640D90FFCECE236133CD7411A7F15A351967A3C68E837AE8C85CCE907590ED4105D937584055FCC689005C0CC94B4E5416428EBB489F45FA5CA3B7705163280543BDAA7881C7017DCAE2A517C75ACD6A36D64218CB93278259B6EA3EED58577EAC0026082368EE147EFB4B7C8EA103FAE042FB161D9A58CA48E7DF6469299B13FC07EDCAA477261112A3E579E0EB22DF51E63FDA4791E74C5C5B91819174D6E02527308BA02CE8732D3C73B4B1B5DA917005D684592E831B5284DF7C0AB9BE1E10414900444887AE62C103171D5BFB0AB1017E8666BE9B336DFE0D2BD340BC4266E46037D989A1E98F041E90CED367E3C1ABB686DF6562859649C0C076FEA8A3EB00E687F50C08A28C0F81880EDDAAE0E794B8CFECF1E57430FD83F77055F73AD0349BC22300362C70C3266BFC3F0CE6EF8DAA45FF1112E94818696F2A519DECD85549A5B154E83B39BD7E335D88DDD48084D666655B02DBF2A164E2B1E4E000AA64D61F280A0B473FE7848021AF7A8A0F5893C8048A687E1DAADD05D73BDC31ED61571CC3DB765655B970E002ACF725A9C096C6F7C4B9C20D151D3EF00E1A213EB8A09FF54700A61F94AEDD808F418250EC36F375D6A1D5EDE6176CCB78B54C8838091101B7618155B1A17B5705B4888AFA5E4A4E72372C458252E8466DA32DDE99D09671EC35782A6E95481D8F8424CED37122C3F17422527356A9C334420ABD5C5C322A1E973C5E4F1348D5303340E76D7D980F387C8DD74562DE01FC551EB25F0B14E31181489FC0A17FAEC4CA45439F5C266C2348AB630065EA8119326065CD3E92D96B3B31ED85B826A4959A1E05E70E3949FCB6C92E29B0071FF4229FB593862B0A17884F770E71F2591F453A5AECFBAF2459D5699DC7D3C161D96160E993B08009265B8004398CF119F95FCC217D38228F1D1F14BCFC5B7160986C339");
        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_I, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_I, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expect sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode("E787F8A574A8F0A77E4ABFFFB44D1F9396E8D2F2DD1C1EC5C573F366DFFF25CB33212B889AB2D56ACC4081BC1688E7D4F0C6BE8E53A5871EEE78A59C7B1C6869ADA6AFB9ED7079A892EB9D02BC4D51E75C275AE4378D0DB254B0674ECCD6A072FAA902182F443E0C8F114CF51741E559F0BC0E19EB1D75E6E0729874B0BDB7B236F7DBE3CD7B90DB940219D0F87D7AF420A5E0FFB73BFB7D221D1782A14597695CFDDE023BA244AAECA77C817E49902E109596F5A2CF2CD1ADEE05783EB9A9C3A6A3DA961DD0EE2B1D418861996F8D9DB7EBA59211B411042C7329CE5FA3011B9092F238FA84EF165A412F4188933B0C6E154B1BF2F5F0880F907BFC6A2A4231094EA6C10CE18318CA115CBFCA90917CA0EB2C9E975CE2108337623696092AE7FD98C4D6EA0DACEEDF6C03FC113F56079F93582195B401052B93FAC7BBE3DCAC213B8BF589D77F01BA63E95B2B54FD5E2D6AB96EC2B387ECEBE2CB21C9A4A0F29EA5F7D24D1CF5E35F0EC94F9B43BFA18D3E979557CB484E5F9EB8CFF35208106A5D482F0895B65C7D92FC87ECEB173AA06EFA494F430DCF3323BF84832B543090B7370364297D0E32601DD8669B6869DFE2DA2BDEE0B48D888ED9E93CAC36E0FEFDD4E37B57958EDED6A36CC6FC4F9CA210A75B9448B14180BF54210E0719BA0FA1887B04634DFBFF199A383F1448FE39DA8635A8EFE7A70A8CC4DC3A552ACD0066088CA4139D446A78082B742A1D65BA2F854C6C1AA3743C41E800E522C1A48B84534751E5910DE8D078155DB45975E66AD11C565ED5E1F1784FB71CF1ADF828F99CBBE82C3B91522947D497FB36BE11ACE0415E526E48E2734459972F5D3E5733C1D10A455BFF2B8A0624EC1142D7E639DDFF5C1ACE8F8D381DAE393E37C935BAD5A5F4FDECB8B0334D643B60D6A3A51B81E6C6D2448C1A54350C9A24035BFB2383AAACEB024B0E349E784A145F6EA70F64BEE64D7D4BB30C8A60AA3B033F51B7B5D7BCAC9DB15375ED9F08F58719A6D5BE4B1D33B9F7AA425E814C8D1C99F03781CC502F4A2108511A2873A7E014C6EC82108005718F2D2B05149F0A80621564C3593E0B4EF87ADCEE960E113047997C4567308FCC87735DA85376A50F6BF40B1022D94A27A7499F7E84612A813AD5C3547A14A0B18C55BAAAE55D9F2845C227860D8235B82E6A322D8CFDBF9FD08D4D23704B5D15E4ECE06E5B7F1791E4E0D2A355CAC0DC4BF54A0838F225FE7BB6A3D38D199DAEE77B9AC1AB2B5C0C68130CBA01E389B3F5E9F3233727B971C17191C680CB7F15CEFB2C6CAAE31F15FD8D2815CC7605ED4C4D691C94CF0113D801A0B5AD51D30612A72BAE62C532966ECBAEAE2A014A20351E89582C2D37FEE403E04A59C8556806014880A50FF78F115914A9E0B7823E4D7A9F0978870BD02DF735A958B2186643B8CF7D5B359A78D6021D20E421E133C87BA7564F3E78DBF80511E9BA3B61E86531FEDE9CE091DE3EECAC46631132A6855B2AA607499DEBFBD0C9E41CAA6155324D361E1A0616BD0F90BEE6691DA35D646A88096443529BBB3BB8D8B236AC81CDB8D3C96544BBE233B0764ECEDA92A5A14B02F49B283DEA6D418A911CC506A521DA8CAD567191C2C37CC9B2C7FD722D142F9D3B2F1F40CE297AAC6B263EC4FFF5917DBC17BACC6A744204F31D69D7EBD8A540368AF1EA7B5052AF28A43BD9FFC2B308F6CF97B74F6A646C7C02720DB8FA933129D73327E48B0828411CC8607AC9355EBAA0546766221EFE19DF0CC4058FB598D359BCD86567755B3FAD8E7E8A2EA08E8DE2EE3B3610F0A454D59B0136DA7B58D6D80E5E42E9FE21267B9D84D31FAB1A88FE85FEB5016FD6722A89972C1D3EB3DF62F73055B98A906E87D7F7C93B2AF6AA6A8392FE3ED355C6F56CDC8630B2C3A06EA9DF197823448E70C01F349FB0E6D69958AF7347D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");
        Assert.assertTrue(Arrays.areEqual(expectedSig, Arrays.concatenate(sig, msg)));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_I, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testSignQ2()
        throws Exception
    {

        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
        byte[] publicKey = Hex.decode
        byte[] sk = Hex.decode


        //
        // Key generration.
        //

        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_II, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_II, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expect sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode

        byte[] generatedSig = Arrays.concatenate(sig, msg);

        Assert.assertTrue(Arrays.areEqual(expectedSig, generatedSig));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_II, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testSignQ3()
        throws Exception
    {

        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");
        byte[] publicKey = Hex.decode("30EA3DACD21DE2AD1CE2A513F0BA4362BC340B792196C145D53446BF483F39B470775F0F95927719FD2D050607796D1F64EA2027AC29611754CD097297BE62CF123C95E172C6D229FEB337FD19745AE701C6B3374F5F25B1221FF4191CC5294BD65C15CD1B0FC15D3F8C0F39F50C20F5DD5FE50B06AFDC1906E562C56C30FF925981CA6E640467DD5F5C8EEC63C9B4270A7E3A30087032C356CC92089FAB51D5C870A9D81C5C461A8B3F53BAB67E09E37F94F22C496238D87B365B1F4896553F31C91FD04E3EADE74F454C32A3732CF1BA631D5A1E6FB3747456579E5F1C58427765597FF12C06119E642CDF1AC24E6ED4787465702DCDDA37AA2E441C7747775D65C6001FDD9546207177C81F5322E272A0517D4F0F5857F91944C72A3D4135BDD171397521812D251373054F6372FA4A03418B40B2AD00A8EC0673F253A40C3BE295142AEE1B40D179A278372D6C01C0F75441CE18B8A549C1523E77F911785B5849EA65297E5817ED6582701804316877A92131260EFAB74A932C1C72C431F50F7C117632EB4D7F063F3F12ED7816B027CE627905C111A7DA2D2DE57BF42E626E392797346675BD6439641FD715571AA75CD60C2497B63C641A106F143232E37809C95FA7185BAB2562D7630F00E443343425B8AD5CC6681A7A0E653879406E743EA4C848B4787C6CF2182A440AF8203DE1C24EE09415244278BF9E779F406880EB6BD9556416BF0175167B9D4543A94F0977FB0277E812600C0DB0AF09FEBC15F15616F5CE075EEB4C212332BAF97FE413473B993944C00F7F83609BCF454A742428693EBE863BB7972E132535AB841649047EB7C73A14EB19075C34F0360E63D376111444FB146DC5013C818603A381670E89596CE828C14C3C1D362A7D9E42569B2C314513CA772A52483A161B144FD27DC6A725219D48EFCA6572EA57985C357229478BBF324A7E45D0E14CB3A257687651265B4CCD7B6AF86349F5611DF4E36F61EB1DB36B6F84B72BBD5E35E91A4B2031599AF96A7B505AFD8B341FDB6009193FB74E3F8D2B2A56672E9A806400BC79B3A77D7CC84B845911C46A4A78F73115B25D72C24F5D0A16406D35E5D02264DB20C6885FAEC73943E66532046A43B078C03820DE7F0FFCFE2EDE313BA56E0E518E38772F40CFB11C061C1FD8005D5E3B2CF1EF6CDB785EDA9A6853EF3A4B5D42AC45673E604CC73A5AEAEF7BA0C13273C4349CBB125B7167C367786E6B2DFBB530932D4C5C6E0C920068522958488F4346F7489FC2047CAB62402F5AE0AC01FC6552B5F50587202D36AA0106603E243A1CB8131776C928137623CBDC25876341D3591FC0FE795B5224EDD8067C4573B8F35978F63217C22445C3269736804E656E68724C13481BCE1C67277924C1EB41149F4BCC2217154826E5EE25EEA1679B7C4340DD5711D924AEEC3E9AC04A9AF1043D8E4C5CB00B38C60B7BAF7FBB2576002376064604A9947577FD7C56370C6C0D76F2DD1E5D011DD7485F2A295BFA3327CCBA1DB6AC689DBE3F5124082CEA5473097C0ADA29144B0F216B18B3B85502854FC7037FA3D4786A5379087115811038D0D5046DF70C013628786C77B94A22FDAA2159A8660C0617F58613A73F50B2B204F306399B4C73A2C25B87403FA7406150677F80B274488E0F58F73C3B1D7586452F10EA6057C86A91DF2BC17707666A2EEA0006CBF9635B1A1354AD473EEB116C324E096726C88B45EE881ED8D520DCF822C3522717422B7DE11ABC1F344F2425596D0C051B713D280D1CAC1E0327651EA419FEEC6310946BC8801F7E1E709F976A04325E8B0D35C2D86BFD020B4F772CB1821BB3CC6DB0007802D439D2793DEB4D1E97672F0E6168B66F49AB762E467A234CEB5091AC5D21870B280E53FDB052732836020B1EDFCF095513247EE124C3C752BC9964716101F0CC6C4D191DEC3F03816F5072E03D25C33C992F089FDD5FE4BB454D375FF1D636D0F45065957077686953050C641054C64D20A0F628DCB45BD8251429E62B22A57B498E09734F6ED0F1351BC16F3C5E4FB52176F6E647F44633CFCA06BA107F482E0AEE932BF7E74643B1738B3208276D356BF401E87B1D9C016E93081CE249647E9D6DBC5630C980197F7767938336E3C64BA7A520C52451F7E650E2680C4CBA0DF0E62795C5262D333707CF109E6E5767361673FC040B3536B5DB3CBB6A735E4123719952F18720E50C2A998B2C8A915D809130906B09A601670DC33C292B0794F63FA1D56EF1CE72BB7B4676CA666DED3FBE69721113389CF27344F4429B4C3BE5324CF78703B4156D7852101F451A01E1692AE64F7FB70B164365D5AA1A87714EC871561D8A63C4270DB2481484411F4570068E61787C1B73F2C90BD4667B831C34526324832922B4AE5AF45C3E50A60A50643E58A050744E29CF161431525248C10393B652065E51B3327990CE5B60373283682684C2035056662D1163E83E21D9CF448D375C0F403DE6736770B55645837C53BE3D76AC415FCC3B83A266294E6DB4D44125D24FB49D2494E91303796335CE7A27162406300FAAA70E3C444FB3C01D32304D9B937BE053332E735A26351D831F50BC8B7559E214D86A4958134FAD7D634B000069084BF6CF1006D659B85E765FD80B23966873FA7624612818D36D78E72A983A6B86AC3E99F756110365C66C4516664418A63D7FDB4AA030609EF97B686B0890677629972F3A6A23FDE823948028D73C02CE22077F3B2B8A4979877D6E38850BD4573F11624CB49905DBDF0B408A1E8E5F39E1E14278F12C4BF458CADF000D8738995329211C28A890752EAA547EB42006D977492D0E8CAF753098401F0806766941777762F7045DD88274B23131E8015433504DF7BB11F6C20838617BE9936F481E0F67AF15BDF21ABF78494BA77E4134803124343A1531FA4F72ABFE48AE2E75106514D5D610A120535AA47395361C38BF2C15FF08D5B62AE0125971221447727F865E35CC597AD7121E7B8352CF56591FBD4B7FFD64D5F25B9D8F1D3A267A8D89031FC83F12EA600D214F421C7137347F672623F620079BBC0CE1173125A03AB8BC4F7879616D1E39C08336C2B8504D9A4949170EC890505FFE333DD05418D86DA1BF461EF21F1C4E42DBFD7F87641A208964EB86457C7A263C9A54C1622DEEDE13D3D44DBD537769F0400EBE129CC535A59A3AF4697F32D36B80536A3FE36EC0770DA61F196B9B2FB11509FE037E0E195ED92052C90146ADB22A41FB7055AA5E7D4360CB105966B16CE5FB0A07C307D22F38689D32A17A3A401F673D857712A66B8F672F7B7914B443460888200CB71638FD65E09A3E83C60908AA28D047668EBE2CE9462CA5E75866B63A1C900D7E323AC62A51C8B50A4E3F26D9607828DD2CE6825D044110744B040C4F367C975680741F43F92CE8B57C7B536009D26E78A732941B7D295D218B68040C4F4A11BB3680040124FD51F45016B20D6BD95B5BF9EF4C78E411A425423CEB264EF808EDB94AB6E177B7B60E2BF22329576FEC092FF12B2B802D48EF0F495A023B5C253ABECE358E771BF7ED7BF9242B955122AD8E62FCE87418C04BAE4E5D153C7D447F1337A63D52AD38F94D040B072996AB3C2D5307F84F70E6DA1CC6745BA75027715C1C77E801589E7649510F303A1CF06B63538C1E5D1B4A606C3EC05C05A6BE147D093DF6B67D4FF3348EE3597A5112277243DAEC7895215509CF1133CC4B4DB43F4C785412FF6C9FE9164280697EE8792278488F74715FC21C4C1018B87F6E6BD85DFA833796DB522A972AA6D366387A3FE39D0BABC612F595394BA37702BF465D3C34AFC60284C562817B7B6B410D222B4F002358D1C2399B544E98506A1EB7336F791D32A902F8D76485D0601F2D6679357181F076A734787D90195A0447782E40BD78193CA04EEF267E207E56172F59F6A74A728E0974424A315C765A0C495275658D9A52B9E820C3E865A8B872956C7E853E1174935AFADB1B662E0118DE714549257AA81F6BE54BAA3131B5997541280EC90D66E41314D9243CA58523999F1132E500374F4466BA4E70F56F5FDF4ACA41006AF00444332AC97743689540523E47410B3E60094D403B54BC695872012BFEBF665EE045435144FD0C7C40371CB5304C1D4378F96D2C86364E98B94E93050F1DE569C7C53B63887F54296B744400C5C1286A1D2D64362E402413975E05E3E17FF23A53DD033DCF925BDEBC524F395BEBBC7AAFA40BF94D50FEAC1BE24A4AEB047BC11875EE650723791D47C914AAAE10AA4041A58A6FD68E6740EF459E4D45454B528CD22F60ED39869B099CB6313258077A9F5EB60E7FB7708849FEDB54F41A68314805A5C0766ACC9F338A46B29EAAC00087AD");
        byte[] sk = Hex.decode("02F02F907FDEBE03FDFEF12FF83FE0BE80FE1018A48F1FC03F03FB0302E8B7306081FF0300F22FC08F40C082FD000A10F8301F7F02F6FE1154C83F20FF7EFAF00F3CA89FBF007F02F82FECB73FE03D06F4070840E0FFBF7F7EFF050234E05F2081FF0700EE2F986F9F00FFF509161850C0E03F0405F915FCC7DF3F81010AFEF9D317001F7F7F04F5F707F86F80000105080A28E04FE0C07E01FA27F427F0BFC0FC030E10F4EFFF9F417FFF07F8CB4700C13E030006103800D06000FDFAF809E44F500001FF0209EC1F206080C0800401FC13F8DF80BFFF01FA0520E8CF7F01020AF615FCDF6F3F81FB0014FEF78F509F7E02FF021004E82F60018200FC01FC37307FBF7FFE020CB8970F604183FDF605E417B060BE82FFE9FB972FA0FF7FFAFEF703FC77E0E0818401FD291838F0DF7E81FD0218005890A07F82F6F71D14802060C1FFF700EAD7973F1FC08104FEF903000000BFF8FF07E8FBC7EFFF7E840709F8CBE74FC03F0106090648302000C0FFFAFB11D4DFFF1FBF01F40DFA0730D0BFC101FB0C0A08D88FA080FF03F7E50FF01F1FFEFD06F90D2C684081BF83000CF80FC80F40007E02EFD907C00F0041F8FDFD11F8F7AFA07F7BFB04EEF3D7FF7F7F0300F1E73BB8C09F7F7F0BFCF7E38F6FA0017E060902F8EFFFA03F7F06040EF89F1F7FBF8501FAEBE7EFFF7F417F0201FC3BB0BF1F0000FD06EE1F30402001810216E223F8DF9E3DFE05FD0D1C2030A03E0001FAF30F9800A0C18104F20FFC1710C03E8005FCF7DBC7CFFEC0FEF6FA0BE0FFBFDF3F7F01F2E11748701F7F84FCF2111C4040217FFD0601F0E717908040FE0600C61B28C0FEBE79FC041A00F09F400182F804F6EB2FF06082FDFDF6EF0FB84FC0BF0403F9012CD81FA08003080816FC17B020BEFDFAF50D04D8DF5FBF7FF9FBD70B58E03FC2FFFCF701DC0750803E8305070CF47F909FBF84FCFD2704687FDFBF7F02F501201830013F7FF90E26D0F7EF7FFE00FFEFF7E3FFBF80FF81FC05E6CF47505F4000F6E40124A0DFBF7F7902010A00B81F6141FE01FC072C08B060817EFE03025490EF60FD7FFD0B22E4272080FF7FFD05202040A0C001FF03F003C4276000BF7E0B08E40320B0BFFE7FF9FB070C5830BF000203080E641010E0BDFF091012E8B7CFFE40FF05F705E44FE0BF007E04FDF7D38F40603E81FBFD29E4EF0F20408003131E98577FBF7E01FBF2F71B3870DFFFFE05F7E9CBCF5F9FBFF8FC03F21318809FFF7FFA05E61F088080FE7F06FFF5EF2FFF3EFF83FF05E8DB5F90C00081FF0002EC978F40410602FEF1EB0FE01FBF02FC08F6D7FF0F014001F709F823A09FC08200F5FA0BCC07D03FFEFB0307F2274860003F00FF05FEDFCF5F4002820105DCFF5780A0C0FD0C0C1EF4D7EF9F7F7BFA081210E01F4081840211184020809FBF00F907001CF81F1FC001FAFD0FE06FA03F7F80010DF8232000607D82FC0DF00B2860C03F80FC07103880DFE0BF8001FAEFD337C0FF7F81F8FA0510C8CF5FFF79FFF2F903F8FFDE8000FF0708A8DFFFDF3E7D0008FE2368605F4000FF0D06EC4FE0BFBE00FE04FCF317F060BD81F900FC37F0AF9F417D02F5F51768F05F8284FEFFFF174830003D80FBED23E437E09F4180F7030820082060408104010EF8E7DF1F7FFF090216E0C7FF1EC07F00F82BF88F005FC0FEFD020C3020B05F010705F8030808B0DFFD7DF902DC0B182080BDFD09FA0D2020E0403F01F9F305C097EF3FFE7F06FE0324C01F607F8602FBFF476830E1FF81F9F313FC1760407E0000102E0CD83F1F7F00FF00EAEF4F4F80BD8002FFE30B4000C0C08100F3F5DF6FD07F8001F9142C4878501FC17EFF0102FCB7AF7FBF81FD0A2AC0272001007DF706F23B18A07FFD02010D162CA0801F417E04F313D40FA03FC080FB08EEEBBF4F610001FE1C1020B8AFDF407EFE04100C7840210001050CF4F75730A0C001FDFD190CC8BF9F3FFFF6F8110C30503FBE800607082C5830200084FB001AC0DFBFA0407FFF0A0434E0DF7FFE80FF03F6F3EF8F80FF030603023800E0FFFF01030EE0BFFF7F9F7F80FAFF0FF817D05FFF85FEF1D37FC09FA0FF7E01F7151450A080C27DFCF711045070C13F02FB08ECCBDF5F00FFFCF600EEDFF72F400186F409F8E3CFFF3FFF03030438BCEF4FE08100090F0210D84F207F0205F4F3D3FF4F60407E020212E84F907F01010012024418209F800305FA0BE49F7F1F7F05070EEE47B81FC0FE030209081C6840A03EFEFDFD051C18703F8084FA0908E4577060FE80FE010AE4AF5FDFFFFFFAFDFB0308C040427CFD01D6DF8FCFDF7E80FC030A241860208182FC11F407F8BFDF3EFE01FFE92BF01FE0FF7E0B01ECFF47A040C20004FE13F0B73F20408100EB15F06F405FBF010A08F8EBC78F5E3E80FAFEF7C3DFFFBF3FFDFA0AF807B07F5F817F0506FE2750F05F4181FD07FCCB07F05F3FFF08000EECF7BF3F810107FCEDDBE7EFA0810104FAF7FBCF1FBF4182F703F0FB37A0013E7EF5F9FD43E0AFA03F7F0203042878AF7FBFFEFA0D0CDC0F40803F02FA060404F09FC0FD7CFCF9F3FF07006140000303E8E71700400081FE1802D8871F203F01020404ECE76F20007E0103E0370870A1C27DFDF2FB0BD020A0FD7FFCFCF523C8AF00C0FDF9FF01F087703F0204F602FEC34F901F007EFC0FF6ABEFAFE07F01FAF1E3EF0FC03F407F03F1F72768C0BFFDFF03F70514D82F40C07F04FF113C0080E04080FF170204E0CFBF3EFD0A04F4F33720C0FF7DFF0AFC0338605F807F000E1A300800DFBE84FC0BEA2778FF1F80FAFAF8FBD74720C07EFF06F0F1D33F40603F800303EEF71F50E0BFFB04FA050418103FBF7EFD0F100838A0E0BD81F9FB2928E00F60408206040E30F09F1E420302F51B0828B07F410203FCE3CF3F30A001020AF7E9DBFF7F1FFF7FFE03F4BF5F7F20BFFF00F801ECE77F20C1FC000FE407F81F01FE7C041BEC1710606100FE01FDDB1338D01F3F7D04001C981F2061FFFFFB002000381F2081FF02F00B24904F803D7F02F1231CA86F3FBF7E0607EA0B5830808003FDFBD7FF57E0DE01FC01ECE7EF0FD1FF407B04E31FD437C0C0407E07F61BBCDF9F1E817DF903F033B87F003F810007FCCF17707FFE03FBFDF72F183020BFFFFC010EF46F4F003F7E05F123EC8F9FA0817E03F4F3C3EFCF3FC20004F613C81F3060FF8205F90908908F7F000603FC0DF8B71F40C18006F6211C2050C03FFD0005061C6070A0C002FAB60E7FB7708849FEDB54F41A68314805A5C0766ACC9F338A46B29EAAC00087AD394D1695059DFF40AE256C5D5EDABFB69F5F40F37A588F50532CA408A8168AB1");


        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_III, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_III, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expect sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode
        Assert.assertTrue(Arrays.areEqual(expectedSig, Arrays.concatenate(sig, msg)));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_III, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testSignQ5()
        throws Exception
    {

        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
        byte[] publicKey = Hex.decode
        byte[] sk = Hex.decode


        //
        // Key generration.
        //

        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_V, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_V, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expect sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode

        byte[] generatedSig = Arrays.concatenate(sig, msg);

        Assert.assertTrue(Arrays.areEqual(expectedSig, generatedSig));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_V, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testSignQ5Size()
        throws Exception
    {

        byte[] seed = Hex.decode("BFF58FDA9DB4C2D8BD02E4647868D4A2FA12500A65CA4C9F918B505707FA775951018D9149C97D443EA16B07DD68435B");
        byte[] publicKey = Hex.decode("976357E9BA3591411285CA585EE79F24A8991634403F889F03729D439C689555B198AEC628F566B8D6B0880B60E35D800A4D533523FCE59C8DBE94FE73445A93455CEA1A45E2C7E2D4B9CCEFD22EFE52AEB5655781A206C6E49D0C7AB7C3E8CBD401A26E1D0B09650E5E34ADFA9D5360945CBB1925814B9A595BD5D09C8A8D51F27F0A0277D95A190595285037B349EDBD18EC323BE62EE0D3B459121F531449EFD11704C04FA9D35CE5893AB17DB1C552B8CC27F333AB4EDA203A2C05B0411684773DFAF19A19859893554D526C8D2680D991C96770636347156B195C085A863168324553A9CB811E763936FA7C11E1431645D11F604652FB4E1113B415A49198D1C73686538D4062A7248CF0D524820C6B413F3180EE151A254E523424F0B955A42A7A82C2644B29E502999A779D3183F3D0A511B5282587221101469221AA29031AB90F34D5A5B0C71F80DB7CD4DAA501FACEEB0CABBB172971588D6B0E0AEF862D295CF26D96C2F24F1FEEA21B91908153D8F7CA93B00963D4203DF30E5686B44985167385574C8D8848E6BD48D5E680006C99590CA0BC469D3E9CE5BF5F47553A5DCC1110465C08C2A34B639B0944C9E5605B78CE72B72A2E3249213B1D55CEFE839FCC022384F09D617565C45415D3BA063C9125FC0B3B745AF3D74E182A13A311248B6C341D734C062E238307FFE80281412EE2D8A64D34C00E76D4B4194096DDCA83072DB62DB9F42D14D71570918038124E48C7943E4313672F1B8E6F22634BD2E93E2A36FD2EDAC7C0227A5B735DBD9B71055A1F94571789FE4D2401B6118F57D11241380E67E0CC9DAE9026AECD0FF8506BB51BA52BCE0261769AF09B12F28588A1286E825444866F11661CB9E3814324917A10C3CE634CFF3E3E44EB99B18DC888A3AB1D570FCAE085F8B033DD0675B2343252C6407B8E14FA4D41BE4731A052C6C4DF8D80F5890868B121226F0F45AAF5422E89CEB99839BE8B9FED44DCC0ACBA4C1C3E3EF951EF1D1313947E4B17DCA55C21D0E06069A96007FDD994FF537B7AE718FABEB6895C98239D1FC33C43311429C2646DC4EA47776309291D7AA7F6E962CEF3DD4CDC9F5B896C84003A631D32943A821CC430CBA9B75C2888BEC60E7F3F30F977BA61C8F31B2BC5298422F0E46413C1B9D6D187590844D4D4B0DA52C7CDF2C8920309F8BB1F8CEF1076FC9889514C454A9FFBF4AF18F679261935262D628207C595AB307DD44F8B5B7F612E85D0B282161F6F10EB413D91A2722048FCF651D546841E5C238CA9C19828C547C48A658909E059737D5F4044AD1849013E0CDDCDDD4C8D65D6A924156D8D68FA0EB4CC1C4B25479188FFA50F917A0AACC942733BBDCE5A053D030BD81D4834E2F35DC575BC697BC87DD0D0E626E3B58E8EF8588F0E4FC00F54A2114E8D519A051215FD0D84C2F76EAD0AC874197D7A19249711A13E1045D0D57AE34CF601093260D6B559C0113D5BBAA4F12C40D00FD48434216D3A1E16EDDDB00739B3C8E14C742EED74496CA1D3522D83A3460B51CCB7D5B990C396FD0FAE6B178C6FFFD198D60336899ED8CB078C58ECB11F13923CE315BDBF6788F49818073982D9C8086AC520C2A2B49175CE378CE91672C5380EF2DE309A8C43D18E48F1BE72FFA3E09DDCFBB3F1575AD9DF2F08BD73114233756B281C916B66EC0CBB3C3571D2D3BB40C8161094460241FB6556683E49D4B55EE88CBD643CE0D6624D823EA629BD2A5811D8A341A8D892CCFC4D43C022C5685FB7FDBA8DD66D78A1FCF0504D0BE34849125A360443F3DC04A6FE3762E2130BB3217E894A6D3F22A21B760DAC297065169321EA6663CDA88D09B7642F78894D3CA140284D5A2A77710DC80A502B55D63DBADCBF9945391295F524B4E181E15B0AC31E71870158123520D028C0A16A6A8FD15E41430AD78E2B982C9169DB96876876EFE5276F42109428D91604B1ABA833872203A0EB0DC5D63BB871B52210035C7435123CA800E52E45550C919D19E13D8240CA98992345FEEAD908602DD30E76AC6A2573DF5491415F5973C7CE64EA4263D30FD136F84A25BC29D551B8B132259D316357BC403758E73CD4751950149A5684A6EF10F2ACD5CF63D1D9863995BF87DCF902467373D03FCC763A3C679990A1068F0590DB0647F4E6E7D0C08D617A8504498D31687F63351E1B150BE6131B304C847B290C5E770199F38730607531BF21EC78CCD4ED7BC7DD3B15F692A3652E367083839ABBE6439EB71101F503B5DA110B5FA70C8334EA9581CC255DB75CA871604A28FEC806FE470EC39AD55255E90727C46669956DBA956FA13F1128A938F6A2D7BC9D8DE6C92013CB7A880EF166F49D5543564DD3BF479985C6402595CAC25F435ED39455D22370F677D0E35236E58BD270F138C63ECA9E298015C508EB5CA92933D6E212846F220FAA71349A1206E8039757576A53C922008EBA80AFCCCCA75139E78C234C9020814BC58945852DEA0BA9416B8647C0D649BEED6831601C3500CB41AB68CC38B5343AEFADDD7989C06B889D62881DE0CE0FA5F850E474594348176E373FD7FD27F322F4A35312FD68033D5039C6BD11F90A114FD60DF67159D06572E6ACF8D2E9D542994942F08A7B870528507BD5144AFD2D815A65B427329C680E33048F446003288343F9CC12F44E2CC7BDB8011C75A057C5E4EA523C70A039982783ED5C9EF9D11AFFC2202D097E25EB6EC05A4C6792315FD54D34D712A8157AEB5983B7F60C77749221719E7C0E59C5A60125673A833687CD059508120238ECA992C7160ECF6B5F571D8F5BC063E6952A5C0B81A62BB6C2B015190AA355FE9400876DD9BF9380D60DB5868685ADB037FF96070D177C03C90C803EC1087F04FF34A2AB818FCDC011A575AB837508CBA1A1FF7F02EA8B7CE24AADE8EB52A5A4929F155D4386D6C3EDBB18318811D15B912945E03364904613B748CBCC0417FA9E04F5B9B9557B471B17F67431BC4EC1836111F3311268FD2EBC5F3679D3FBE536CE155B53520E481B48AFFAA68811C8CDB3333BE4FBF45FA0069D69CB16D05A2F7895A1B007304E054C9E782052BFD8B958E211EF2E45233F1B40DD29F1989694D49946AE6B4B0C8C0DEC1995C25B9F8975004967AA41ADF1D8141F4183C87C602CB4BF557A3C76618FDE3D7169661F09354355A6BACA9597281DE226D4DDFEED217FF204F4BD0D41B97389DCEA148B43C5106B0C8157F9C06390F5E9E5C5BC281004EB4D94A0ABF7594B4FF32557767F46F903F0A30E3688DB0F549A5BC2D16BA93301B346475B00A74252DC94BEC4366509C1634C16F40F7032D8651C91D4A6755AE495D9D802B363863383FF5C34D51085E81DAA85D7C3D00C4B4D1310E1C84F8E857E4C1DF9D4206758B2A082D2E0909317E5293A7C3B0D9DEFFE369454C9B4AD649A9D0DA8B78FA2B03EC53B2B6A31CF4934EDB50353C25AD09125192A7F0C31967245C5C14C61696A9516395D2E24904ACB5D200F2A554D493537F26A07003BBB1A4498676C6FF2D11CC2143044490CD05AA498BD10BE3700D2A51AFA757E1941F842E6244F5EA35967330CB1BBBF40F753036CAD5B39BF2955DBDAE4F4EC1F5D10047A1DC061C47EF5BEF49AD7D526C89A47A57968409876433C1C089818D0690445E5DB8B90913B59FB4E02FCB4BA8766D10ADF056EABFD260DC8F4820A6AC3A66F4AB5B88374C42E25BC360A8FB9735B6911D1313CE1ABB00CE04D5FAA9C10213A97D73FCD4C3DBE2CE3D647EC42C287396A4E400F55ED1F39A8CD174010AE5A3442062B310AC9DB7FA5697A55FF1816FA16FC8901FDA536A055380B4339526FED023B60B3CC959F5D1B4A19353CD132A2A169C5522F4BF03C3F19B46B02B1F40D24C0009C14F6799639526105077F13488FE928618E2EF2FAF3D16DC61585BF15E9FCE42038B204FED656D8254CC87730432822512A3D08B66A7A783E88B1F98ADAC40D2AC1E32930D0FC84480BC1587770CF0210915EC021DED64EE4633C58CB6111648D3550975F45B90B4C3D777964F4C07EA388738C7AB6B1FB043957E0A3A28785083171E03F09CBF0A395EA99E22E4B3DA24C998E9F53C11B067EDE3A60AFFDE16EDEA106675886D81FFB0AB0D8279C0416CE8B648C3FADC65B3C3B5B82408BDAD06E52A69EC29D32F94099F7CE5BD47CCDEB3EFCB92E71610F89E91476652486789703D0963146DA93185D5D2FF546297293C5CA884369226C526CC1C3759715D59BFF4480098D7DCE2881624C5581D44AE76D6EA5A144F780779B47203F817DF0A0B1A4E525C7514B1E31510177802923812399011FD25AED247728D2B46421B740320A140EE45EF59E6D2280FA190DF524233552F452BFE551E348AD665B6AECFCF028AD6068A1547C714503F6E1C931B557634C5950D83BE20DE29D244F8111E2C84DD66E34F8E5E8D04F577BA408BCFB4CC99C01A5C9DDA60AA69C020545A2F9931C587F0570801CF0722A7845DBA5838897AA35D714C85D9EC0DBD5C51274178348CACA15F06E7C014CB935FD219DBA8268E1C7A67D683ED778D2547DFD0E556C3B0C1195701EAE8CF96D104EF40759B6E1737604120D0426A3D7EB94C50F92EE309A0DDA7EFAC0CE29CF2A06772310CD8C19C7D7ED28B130652E9810C07310CF25A099B497F5F1F9DAEE32392C18DC4175F946BF6100245905B4956651553FC79767456F6E7A020C7661E169B0785B073F41479A8D7BBC340081C9B7DAA9D23F439A7C0C071270BC69164D50518451205002F3B70898557B702DDC3C6588A07141592BD9B4F80441C03004A83A6688ED0EF7083B9FC0F7E89F4DA46AC2C429110EA521CAAC3CB6F5058F1F8C757C5283B72566CE75C257DFF6C61F40C86DF9B93802CFD282446E450B00C959E38975B2579089462C754F4569E7BF227E9519E78B29B63AF8600227832B33469615176A131E950469720686953DF205E50595091F0570A1F152E3CF02CA67A6590E1CD59557C3F6EF28999953ED9297B66E3409F4856B898843A90ABD331FB48BBFC40DEB2B3F35112AC7CC8D9EC6A705FA57B784C522D4A2F887892D0D6AE5DD4C502E67AA9E1FECE32C1F96C8CD933FD0941E994BAD4BCEC8B615A66FE2B5E615C4593677D8711802E12402B2424CD8195B926F5C7FCDB0B9445A65537C7FF5A46D8ED66569730777FD1475CF920D35B1F2E0704A4163110E6A9DCCB523840A35CF17083465E0554D93E8D6E53F854A0B1AC5DFE178A251D730EB1578FB3244EEF2C49A2160AC29C11AF0044E8DD4255E998206CB843E9C7010EA8D25647044E4A25B61570CDB8549AC36F2723516DC1C9311F1D986D54C83D7F98CD1C9EC6AB64EE545F7BB83B8529920F91D8122DEDD166E81CD2ACD80F15B6080974461137064A299B50C18F1998BB58A9891DC88C5FB28412C21A2ACFD9E7177670CA0B441A27764E891F74499E64B6DF82F8D9F37AC09D5D01C55030F172EE4DF2279D010D5F55717312F2150A12041AA53966774DA37074C3998234DC722A123B8017C641213F56A2C6A80B20FAC05F5AF642263D351DC5907574615E9964FE2DBF3D934C717113C9EB6D34611AF7EBC525DD23B4059FE9A2E0B24388D655283BE2514301A1D64E4B784F034A23126154B63304F9256DC314895303ED3A5827FDB0EFBB8D0B0118BEEC965AF21F2C9D8E11122F5F92F1B76E42FD5E8CB6DB7384142D41EC7994CFA6140C83AD19694070F8566195BC45AD5260EB43414C06DC36D2F7518B4705426FFBBCF6A8814D8D90D4C0F22842CA8DC2C4A1EEF134D918482116384CD98275697608909666934682F8DD8655611F92109BDD923C9D6C3DCD77E827374850DDED077B35F771B18749B26ED65E1E55CA507AB874056127D81FA94A7F2990696D866210F5E352F1E856FE10C6CE214458A1A84BAA7E0E0999D5EA862D14DAE191A77E4BF2E4AC124393616C275B86107191D1A35921BDBC05C6C1B35F6191FD9823B35D1CB3B4C744B2437945114C74AB4B728385F6F166D328051CA473625F059A4AA8446A015149D2E20FB9451D09E43F498DBA43840EB57DE2C83B8B0536ED488B73D51732C04427441B6CD4769A32C13A39234CB6E1069929746EB59BFF440FD5717535786CA8A6F25C4F9D51CF2E0655F09D20ADD019BD77F90894536DD82145CE0605FD4D3E8AD078008438B8FDC4499D5D5084CB9D1A3F34910A42AF3A39BA82F014662FA150C2C790E3078CD2F733492E6CE9F9C4DD29D885C877F45672EDF2049794B56D004FDDA07D929CEA6F42E388E9FD867BD5284CAD97A307821496E1CA3A4E21D9D9DF57E622FD1523876EE8476A5DF50236C2DD642D890509502FECBB6B70FE48DCA704628003AE3163B080B05DD70C5735375554E891A6E19FD609428C487C317C982ABD163EE2C63A82EF7D692FBC7F4AC6D29A5B221731B76DC53DD745427A1769551FFF0F05C3248E44577CD01EE013CB737009E53E18467C8EAED74EA1174631E9C635F1704609A09578D328CE551968A6311FBA6DC27B7A0B2091C611855BA989BF9C7458168E8898AD03073C3E0CCE1317109860E261A740E076104D3B011E8D4DE27635FB802D6212A2A625C378914C93F58E6A35C12B774DFC2CD7B6650A7EA0F5D553D27205B8BAF394BADCEF764FD5866B243CD3F4109BB8E6BF0CF2832EBE1466BE051E283A49149B2A26934513CF768FEF087855755F029FE0813857EF79189E580A930CAD851378C69D3E1E649FC0D83A5E4DBF98A55043CF388CE32540E23C3F401394FAB076C9514D4AE274BB22F14EFB9C7D4BD4E724CE388CD336D82194568B7E915ACA51267607E7E72D9A14FB551CA83519EC7550563FEF43ECA85B445C200D63B34BC06B12D51F7DBA7067902658E64DF9D67DD046E024E9DAB04E6771CEC34D1E16CAB8C4CDF5EBF48B6180519C386BD5413360BD1E2F894CA80160C5201225634ABBC309CFD4EA485158F0D484CA9E3AC4992F72727AF0AB3190E3D24A6F13C6AF33D2C555D2B6C3A60EC34F2441075BF03CCC43822452489FE5021CB2BDB4D26C979881FB339B9B20F1FA702A25F17FE0A2B89DF");
        byte[] sk = Hex.decode


        //
        // Key generration.
        //

        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_V_SIZE, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        byte[] msg = Hex.decode("2B8C4B0F29363EAEE469A7E33524538AA066AE98980EAA19D1F10593203DA2143B9E9E1973F7FF0E6C6AAA3C0B900E50D003412EFE96DEECE3046D8C46BC7709228789775ABDF56AED6416C90033780CB7A4984815DA1B14660DCF34AA34BF82CEBBCF");


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_V_SIZE, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expected sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode

        byte[] generatedSig = Arrays.concatenate(sig, msg);

        Assert.assertTrue(Arrays.areEqual(expectedSig, generatedSig));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_V_SIZE, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }

    public void testSignQ1p()
        throws Exception
    {

        byte[] seed = Hex.decode("061550234D158C5EC95595FE04EF7A25767F2E24CC2BC479D09D86DC9ABCFDE7056A8C266F9EF97ED08541DBD2E1FFA1");
        byte[] publicKey = Hex.decode
        byte[] sk = Hex.decode


        //
        // Key generration.
        //

        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_P_I, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        byte[] msg = Hex.decode("D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_P_I, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expect sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = Hex.decode("6238CB4227F176C95E1661842CE9AABDC1BA0DF9801F74239152654841BFAA0EDF0294AA66D9BD9AFDE6F7F3627BB787B556493F32A81F94FF26193539BD9DB6D7B7DE91CB22BE2435BCFE3DD4509D8FC316CE42FB73E385DEB3E0CADFF8ADBD7EBBA602003FBC23F63D88A0BD31319A2BFF0721488191DCC13E529F9A6E3359AB22BBAAD3C85C755FA5649EC2BC84D7AD920DE7F9C6663B8BD56F53F6812B73571418922B710FB3BDB86ECF3BF1F7D12A5E32F39EB4FEC46534D940AF0B9F069C65CEA2152FABB44E870298BD07270E69E000342A1734E1CBEEC02E89FEF4036991460F4C6B71BC39DCB5DDD8FCBA78A264EA1BA64DE8D7C36D786C688E369EE15C55AD0F18443FF9565C57CC69CAC4EB5ECC49A77C799123F960FE7B185116BC6BC991903814F9C736815AFEF27A742A58A684D2AE284661AFDCBBCDD66B703010DBD2DB5AB56850F35E9F819CE240AEDE97EA43A483BD6AE1A9A8CB7FEE9B2B3398B63642EA5A7739BD793155B25D53F23BF08A89EA0A0B20829F40E83E7544BFB7FDCE3DC75189319D7C10E41395A40B64E909F2B7DDE0022C80E00C73661EDC01B18B5AB934D6D10201E5E11C84A90DDC9C41D98BBCEF8C575DDB3445474090E0EDF7AB340BA6256996B6ADF37A2A565BF81C31252C84F73CE4B30041FCCC674C44A439059704E944FB24767D52A6C72A41483B626D75D29F00CEE0CF53EF26C44BEF2E05105E64971D00D774747E0B590D3784146EED28C5059EE3203E5C668AB3878874F7B2B6ACFF34B6531952496624D49F7CDD3A2C4041D9296C59E36DF4C5AC471AA470FC37EE2E15ECA7891287D60EAC457D275138EAB20F55D2A93BBD2D1EF87517AB1F43ED1E6174F169AF0FAC48BA8FCD090753844E35F87B4DBD8351DD539B57E9F2418F23416294E026F2CA9A7D6D43596ACD6A684A4C96BDE527A6A3736D59E210527A180E632B33F43AEAB4113288CBBDCBA92E39378EF25FE70F3EA29C41E04E4474BAF79D5D0E78F57197495994F2EF770FB6856C25560F5E78ADD985AA1D2B8035B9459202F376B0E735BE3907E2E73BA6BC6F6D7583A137F910F41F3C21D817269E5C13012AE16E0A5AEA1B6545487BFE563C3CD2032ECA29DD90F0FF448ABFF7530C79F7E038C3CF8FC068250A8D1AA438EB98DB977F0FDE98EFDA31E18A8B82E33FC471ADA95BAA027909BE282EE4CA2DF6BE4477CBC23E599B8AB0E8715EC423F171FB04BAEA8B6DEA751C3DCFDB91B6DB6887E49DE3E0B199D8EAA27B40C16F41A881B2923B32EB44FBD4AC0C33AF5F7B62D04A1284E33290DE7F2283562D427E119FDFCA3D73B588CEDC11E855D88FF44D94970B629F66C6C03EF548E384B3A62C2E124B236D1705F9DB3B7197AA7BF8E6CBF731B000C56E4934F6D931947FCC35DEB4FF3A07D8A3DDAA30C3E88981561FEBDA0FEAB8EA2FE9E7C0A3DA496320F0FDDBCB9A9F6BB442F246A7FFDFB4A301456EFF8D67B6AE2BEC958BED930D6C73BD24ECCBFB58C293186DB871A40966CC6D5ED1780C076A8AA54B4B0471E1FE202DD02A59D3187D4007A8940B67A4D3FD1A8FD6AC77D48EB0646A30625BB2E261937422B0885180CCC7CC89CC9D14A00004E6D5E9F1EE25A94790ADA993904025ACB1EDF36E100CB8C3CB5AFF7E5FF36B7ACD94F865452FFBB2F180C4F7094574DD3A48E275E89A3D4E7D6635D7D5A95A11907CA974329290CC170908176E6C990E10BB8CB79051D690C5B71316BE43C384FEB0BD9DEE36A1D1ADE7B024B006DEB4A7E165A9A87095AB59DA160CEAF0ADC90331720D99FFADF0C04B22FB30E7F3D91790B508651FC368B545C728FFD1585FBC174A66554F5BF578CC6D3A903DBD188EF2E08A7D8A4B359F848B651DCE24B7F7F26C4042AE110A4048F84E61188CA6B59F2871990584ECBB3639C160B49B5539C3B6B969055490572CE5DBE5E27DC5F2FEEE41D081FA4F2CD660F3916CAB71C1582A80C34683844552DA13DA923791D274E33D02BF1ED1AD5D63C7A51232711A2A650A7D141AAD346672BA714711F70D0786DB17E0B4D2D30358D1F3BFBD0FB6C239730E6E03788E6915ABA1B7494D71D8A265A4BED8E477CF8885A2F405EE4911653A45D2F9AF62AA25B1B2BB7A369F766256124F20ABD9A0166C4B89DC1646AED2E818B7A33C44E58948BDA30098624ADE2B9BC19D186F43D33FC53962AD7555C153F7BFC80933B5262B7F626E4C4A429F9166AD15BF377C3D829500B91E716EDA05A4B099452A1C8DF4F7F2E6B182FF7FACBA7C12D6302D5B0160645BCAB4ECB45D1D6F8BF53EF0BD3B9A391B400D96C38C886D7DF32F0158271C3EB9259D070EEEF7B6A01D25BA33FFF465408E41BBF1BBF4B881BD1463CF326D3C932D131CB9EFA64A6933B5D8A0E06D4C6C0E9467EE6BEE70DD78BCFA2A5D96642719508DD2FF8F710353E8A1D6695F7DC9CF2FEC592B3581D3995154DFE2F5C0DDCF11FF49D1560D804686EEB4D9538D281CE524B382218B390DA7D34D29583D082880492175A3A348541E8B971F6F39921ECEEBEE775738C015D2DD07A8B1E325E3E640E13B97F9E54A58D99E249C45704370CF4CCD938E5552FC51D3EA76F1ECE57FE6415D751267547BE9B8D68C494898D610008C10070BE6D446FB3A107D961A2395F664D01171B871B1310A03BB8BA672DF01103345F25D484EF87AE99DA56FCCB0C97E7121FA07ED74C17CEDDEAEC7ABC18E14B2376E6E11805214F7473BB4514CFBA0A54BCB855395CCF7EBCEBD170776D7E78DA4FFC9F08A7D33A1042AE86DA1EECB44452E96CAE5EB874E78B69177B6E7EC75DF6CDC9662C1B7444E659BA4662C0445A5D729D2F2A5AB36ECDE30C28699ADC14EE7305F6E7810AD277E979199005DBACDD41521ABFA6AF26A991BF130C3277A810831696D11125976FA7B96CCEC7C429DCE00AD8D892E9F60A6D0BDC82F53CA0667503416C5C1B1D86DD14501811B9C7CA109C912C822E0FE1588404D92117F249405224CEC625291983F77439A05D1404692A8D10658F3BDFADF5593F89F60E34A04ED83E45CC61BB44D43B3331BA1999229EE2CAB3DFD2797C44B4DDDF6740EEF186EC98E9FB9BAE3155FE1E97DFF8B59E10EDABD282B539161F3EA597B5B8E33306578D7F6BCF1B1CDA1F72237FDDAC7BCAF15D112E6CAB50E38E57140CC9DF9BF8C1EAC4A44CC507D2E3B256934C6F8BAD57B9CA1B24562F3EDD7BD1ABE110AA52FC71E4FDB4B4EA7EB3113E69620AEF2C1F0CDD03CB2910FD61E98923B430BE4B5BEC6A7AE517F2AEFD746E0269D168D543CCFEFB1A36FFD17A8B208B2358EE40ABB64F0A887A27C3DE64B32FC78BDA1BFF932668A230A1AE8BAC4A64DB572400D28F4E53ABECF0EA12C64910E59B0C5B979A71A609B85A059C7052D6E077953E6402D84C5047F0D4F45B7D53B36CB0C3FFEFE1DE6C2DF0B9E5C5C5F927580B8FB67D698ABFBD095198777AE89AD25B79A5CA3CB64EED3EF6A566B222070877DB78DA2AE44976BA3DB7EA0D7D8066E4358807AEBC84105DF99A25E7E99553E8657B4DF176FF9A0B7B61EAAFCE6F196310173DA2465E73D40C66C4956A95C6AF143B24990451799249CE76E3A49B0D4C11A97FBA5413B0A99D5EB8D8B8DCB21845CB1B2AA6014F2B3D81C4D8D734FCBFBEADE3D3F8A039FAA2A2C9957E835AD55B22E75BF57BB556AC8");

        byte[] generatedSig = Arrays.concatenate(sig, msg);

        Assert.assertTrue(Arrays.areEqual(expectedSig, generatedSig));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_P_I, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testSignQ3p()
        throws Exception
    {


        //
        // Values put in file because vectors exceeded length of string constant.
        //
        BufferedReader bin = new BufferedReader(new InputStreamReader(this.getClass().getResourceAsStream("/org/bouncycastle/pqc/crypto/test/q3pIII.txt")));
        String line;

        byte[] seed = Hex.decode(bin.readLine());
        byte[] msg = Hex.decode(bin.readLine());
        byte[] publicKey = Hex.decode(bin.readLine());
        byte[] sk = Hex.decode(bin.readLine());
        byte[] sm = Hex.decode(bin.readLine());

        bin.close();


        //
        // Key generration.
        //

        //
        // The QTESLASecureRandomFactory.getFixedNoDiscard(...) is used so the same key values can be generated for a given seed
        // for testing purposes. You MUST use a real SecureRandom instance in reality.
        //
        QTESLAKeyGenerationParameters keyGenerationParameters = new QTESLAKeyGenerationParameters(QTESLASecurityCategory.HEURISTIC_P_III, QTESLASecureRandomFactory.getFixedNoDiscard(seed, 256));
        QTESLAKeyPairGenerator keyGen = new QTESLAKeyPairGenerator();
        keyGen.init(keyGenerationParameters);
        AsymmetricCipherKeyPair acp = keyGen.generateKeyPair();
        Assert.assertTrue(Arrays.areEqual(publicKey, ((QTESLAPublicKeyParameters)acp.getPublic()).getPublicData()));
        Assert.assertTrue(Arrays.areEqual(sk, ((QTESLAPrivateKeyParameters)acp.getPrivate()).getSecret()));


        QTESLAPrivateKeyParameters qPriv = new QTESLAPrivateKeyParameters(QTESLASecurityCategory.HEURISTIC_P_III, sk);
        QTESLASigner signer = new QTESLASigner();

        signer.init(true, new ParametersWithRandom(qPriv, QTESLASecureRandomFactory.getFixed(seed, 256)));

        byte[] sig = signer.generateSignature(msg);


        //
        // The expected sig from the C version is [sig][message] so to validate we need to append the message to our generated signature.
        //
        byte[] expectedSig = sm;
        byte[] generatedSig = Arrays.concatenate(sig, msg);

        Assert.assertTrue(Arrays.areEqual(expectedSig, generatedSig));


        //
        // Round trip against the public key generated by the C version.
        //

        QTESLAPublicKeyParameters qPub = new QTESLAPublicKeyParameters(QTESLASecurityCategory.HEURISTIC_P_III, publicKey);

        QTESLASigner verifier = new QTESLASigner();

        verifier.init(false, qPub);

        assertTrue(verifier.verifySignature(msg, sig));

    }


    public void testKATVectors()
        throws Exception
    {

        String[] files = new String[]{

            // org.bouncycastle.crypto.test.qteslaR2.KAT.ref.KAT32
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-I.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-II.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-III.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-V.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-V-size.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-p-I.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT32/PQCsignKAT_qTesla-p-III.rsp",


            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-I.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-II.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-III.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-V.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-V-size.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-p-I.rsp",
            "/org/bouncycastle/pqc/crypto/test/qTeslaR2/KAT/ref/KAT64/PQCsignKAT_qTesla-p-III.rsp",
        };


        for (String file : files)
        {
            List<QTeslaKatVector> vectors =
                new QTeslaKatParser(file, QTESLATest.class.getResourceAsStream(file))
                    .parse("count");

            TestCase.assertEquals(100, vectors.size());

            int type;

            if (file.endsWith("qTesla-I.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_I;
            }
            else if (file.endsWith("qTesla-p-I.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_P_I;
            }
            else if (file.endsWith("qTesla-p-III.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_P_III;
            }
            else if (file.endsWith("qTesla-II.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_II;
            }
            else if (file.endsWith("qTesla-III.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_III;
            }
            else if (file.endsWith("qTesla-V.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_V;
            }
            else if (file.endsWith("qTesla-V-size.rsp"))
            {
                type = QTESLASecurityCategory.HEURISTIC_V_SIZE;
            }
            else
            {
                throw new Exception("unable to determine file type for. " + file);
            }


            for (QTeslaKatVector vector : vectors)
            {
                try
                {
                    doTestKAT(file, type, vector.pk, vector.sk, vector.seed, vector.msg, vector.sm);
                }
                catch (Exception ex)
                {
                    throw new Exception(file + " count =" + vector.count + " failed", ex);
                }
            }

        }


    }

    public static class QTeslaKatVector
    {

        final int count;
        final byte[] seed;
        final int mlen;
        final byte[] msg;
        final byte[] pk;
        final byte[] sk;
        final int smlen;
        final byte[] sm;


        QTeslaKatVector(Map<String, String> parameters)
            throws Exception
        {
            count = asInt(parameters, "count", -1);
            seed = asByteArray(parameters, "seed");
            mlen = asInt(parameters, "mlen", -1);
            msg = asByteArray(parameters, "msg");
            pk = asByteArray(parameters, "pk");
            sk = asByteArray(parameters, "sk");
            smlen = asInt(parameters, "smlen", -1);
            sm = asByteArray(parameters, "sm");
        }

        @Override
        public boolean equals(Object o)
        {
            if (this == o)
            {
                return true;
            }
            if (o == null || getClass() != o.getClass())
            {
                return false;
            }

            QTeslaKatVector that = (QTeslaKatVector)o;

//            if (count != that.count)
//            {
//                return false;
//            }
            if (mlen != that.mlen)
            {
                return false;
            }
            if (smlen != that.smlen)
            {
                return false;
            }
            if (!java.util.Arrays.equals(seed, that.seed))
            {
                return false;
            }
            if (!java.util.Arrays.equals(msg, that.msg))
            {
                return false;
            }
            if (!java.util.Arrays.equals(pk, that.pk))
            {
                return false;
            }
            if (!java.util.Arrays.equals(sk, that.sk))
            {
                return false;
            }
            return java.util.Arrays.equals(sm, that.sm);
        }

        @Override
        public int hashCode()
        {
            int result;// = count;
            result = java.util.Arrays.hashCode(seed);//   31 * result + java.util.Arrays.hashCode(seed);
            result = 31 * result + mlen;
            result = 31 * result + java.util.Arrays.hashCode(msg);
            result = 31 * result + java.util.Arrays.hashCode(pk);
            result = 31 * result + java.util.Arrays.hashCode(sk);
            result = 31 * result + smlen;
            result = 31 * result + java.util.Arrays.hashCode(sm);
            return result;
        }
    }

    public static class QTeslaKatParser
    {

        private final InputStream src;
        private final String srcLabel;

        public QTeslaKatParser(String label, InputStream src)
        {
            this.src = src;
            this.srcLabel = label;
        }


        public List<QTeslaKatVector> parse(String blockDelimField)
            throws Exception
        {

            List<QTeslaKatVector> vectors = new ArrayList<QTeslaKatVector>();
            Map<String, String> extractedParameters = new HashMap<String, String>();
            BufferedReader bin = new BufferedReader(new InputStreamReader(src));
            Set<QTeslaKatVector> duplicateTrap = new HashSet<QTeslaKatVector>();


            String line = null;

            while ((line = bin.readLine()) != null)
            {
                line = line.trim();
                if (line.length() == 0 || line.startsWith("#"))
                {
                    continue;
                }


                //
                // Vector parameter.
                //
                if (line.contains("="))
                {
                    String[] kv = line.split("=");

                    for (int t = 0; t < kv.length; t++)
                    {
                        kv[t] = kv[t].trim();
                    }

                    String key = null;
                    String value = null;

                    if (kv.length > 0)
                    {
                        if (!extractedParameters.isEmpty() && kv[0].equals(blockDelimField))
                        {
                            QTeslaKatVector vector = new QTeslaKatVector(extractedParameters);
                            vectors.add(vector);

                            if (duplicateTrap.contains(vector))
                            {
                                throw new Exception("Duplicate Vector encountered, set : " + vector.count + " in " + srcLabel);
                            }

                            duplicateTrap.add(vector);

                            extractedParameters.clear();
                        }

                        if (kv.length > 1)
                        {
                            extractedParameters.put(kv[0], kv[1]);
                        }
                        else
                        {
                            extractedParameters.put(kv[0], null);
                        }
                    }
                }

            }

            //
            // Trailing block.
            //
            if (!extractedParameters.isEmpty())
            {
                vectors.add(new QTeslaKatVector(extractedParameters));
            }


            return vectors;
        }

    }

}
